// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 3 and 4, the first 10 terms of the Fibonacci-like sequence will be:
// 3, 4, 7, 11, 18, 29, 47, 76, 123, 199, ... .
// By considering the terms in this sequence whose values do not exceed seven million, find the sum of the even-valued terms.

// В последовательности четным будет каждое третье число, начиная с 4.
// Будем вычислять каждое третье число, для этого выразим F(n+6) через F(n+3) и F(n):
// F(n+2) = F(n+1) + F(n)
// F(n+3) = F(n+2) + F(n+1) = F(n+1) + F(n) + F(n+1) = 2*F(n+1) + F(n)
// F(n+4) = F(n+3) + F(n+2) = F(n+3) + F(n+1) + F(n)
// F(n+5) = F(n+4) + F(n+3) = F(n+3) + F(n+1) + F(n) + F(n+3) = 2*F(n+3) + F(n+1) + F(n)
// F(n+6) = F(n+5) + F(n+4) = 2*F(n+3) + F(n+1) + F(n) + F(n+3) + F(n+1) + F(n) = 3*F(n+3) + 2*F(n+1) + 2*F(n) = 4*F(n+3) + F(n)

function fibSumEven(max) {
  let prev = 4;
  let current = 18;
  let sum = prev;

  while (current <= max) {
    sum += current;
    [prev, current] = [current, prev + 4 * current];
  }

  return sum;
}

let res = fibSumEven(7000000);
console.log('sum =', res);
